name: Create Issue
on:
  workflow_dispatch:

jobs:
  create_issue:
    name: Create Mess Issue
    runs-on: ubuntu-latest
    

    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: phpmd/phpmd
      - name: Mess Detection
        run: |
          mess="$(~/.composer/vendor/bin/phpmd . json cleancode --suffixes php --exclude vendor,tests | jq -r '.files[] | .file as $file | .violations[] | "- [ ] [\(.description)](\($file)#L\(.beginLine))"')"

          # Define a unique prefix for the violation messages
          prefix="VIOLATION_"

          # Check if phpmd found any violations
          violation_counter=1
          if [ -n "$mess" ]; then
            # Prepend a header to the Markdown if violations exist
            echo "PHPMD_CLEAN_CODE_VIOLATIONS=true" >> $GITHUB_ENV
            while IFS= read -r line; do
              echo "${prefix}${violation_counter}=${line}" >> $GITHUB_ENV
              violation_counter=$((violation_counter + 1))
            done <<< "$mess"
          else
            # Provide a default message if no violations were found
            echo "PHPMD_CLEAN_CODE_VIOLATIONS=false" >> $GITHUB_ENV
          fi
          
      - name: Create team sync issue
        run: |
          BODY="### PHPMD Clean Code Violations
          "
          if [[ $PHPMD_CLEAN_CODE_VIOLATIONS == 'true' ]]; then
            for var in "${!VIOLATION_@}"; do
              trimmed_line="${!var#"${!var%%[![:space:]]*}"}"   # Remove leading whitespace
              trimmed_line="${trimmed_line%"${trimmed_line##*[![:space:]]}"}"  # Remove trailing whitespace
              BODY+="${trimmed_line}
          "
            done
          else
            BODY+="<br>- [x] No PHPMD clean code violations found<br>"
          fi

          if [[ $CLOSE_PREVIOUS == true ]]; then
            previous_issue_number=$(gh issue list \
              --label "$LABELS" \
              --json number \
              --jq '.[0].number')
            if [[ -n $previous_issue_number ]]; then
              gh issue close "$previous_issue_number"
              gh issue unpin "$previous_issue_number"
            fi
          fi
          new_issue_url=$(gh issue create \
            --title "$TITLE" \
            --assignee "$ASSIGNEES" \
            --label "$LABELS" \
            --body "$BODY")
          if [[ $PINNED == true ]]; then
            gh issue pin "$new_issue_url"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          TITLE: Test
          ASSIGNEES: landonpatterson-tyler
          LABELS: enhancement
          PINNED: false
          CLOSE_PREVIOUS: true
